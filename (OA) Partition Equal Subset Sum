bool subsetSumToK(int n, int k, vector<int> &arr) {
    // Write your code here.
	vector<bool> prev(k+1,0),cur(k+1,0);
	
	prev[0]=cur[0]=true;
	if(arr[0]<=k) prev[arr[0]]=true;
	for(int i=1;i<n;i++)
	{
		for(int target=1;target<=k;target++)
		{
			bool notTake=prev[target];
			bool take=false;
			if(arr[i]<=target)
				take=prev[target-arr[i]];
			
			cur[target]=take|notTake;
		}
		prev=cur;
	}
	return prev[k];
}
bool canPartition(vector<int> &arr, int n)
{
	int totalSum = 0;
	for(int i=0;i<n;i++) totalSum += arr[i];
	
	if(totalSum % 2) return false;
	int target = totalSum/2;
	return subsetSumToK(n,target,arr);
}

