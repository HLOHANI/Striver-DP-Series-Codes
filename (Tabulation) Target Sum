int targetSum(int n, int target, vector<int>& arr) {
    // Write your code here.
	int totsum = 0;
	for(auto &it: arr) totsum += it;
	if(!(totsum-target >= 0 && (totsum - target)%2 == 0))
		return 0;
	int tar = (totsum-target)/2;
	vector<vector<int>> dp(n,vector<int> (tar+1,0));
	
	if(arr[0]==0) dp[0][0]=2;
	else
		dp[0][0]=1;
	if(arr[0]!=0 && arr[0]<=tar) dp[0][arr[0]]=1;
	
	for(int ind = 1;ind<n;ind++){
		for(int t =0; t<=tar ; t++)
		{
			int notPick = dp[ind-1][t];
			int pick=0;
			if(t>=arr[ind])
				pick=dp[ind-1][t-arr[ind]];
			
			dp[ind][t]=pick+notPick;
		}
	}
	return dp[n-1][tar];
}

