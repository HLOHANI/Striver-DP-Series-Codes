int f(int ind,int tar,vector<int> &num,vector<vector<int>> &dp)
{
	if(ind == 0)
	{
		if(tar % num[0] == 0) return tar/num[0];
		else
			return 1e9;
	}
	if(dp[ind][tar]!=-1) return dp[ind][tar];
	int notPick = 0 + f(ind-1,tar,num,dp);
	int pick=1e9;
	if(tar >= num[ind])
		pick = 1 + f(ind, tar-num[ind], num,dp);
	
	return dp[ind][tar]=min(pick,notPick);
}
int minimumElements(vector<int> &num, int x)
{
    // Write your code here.
	int n=num.size();
	vector<vector<int>> dp(n,vector<int> (x+1,-1));
	int ans = f(n-1,x,num,dp);
	if(ans >= 1e9)
		return -1;
	else
		return ans;
}
